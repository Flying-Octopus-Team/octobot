name: Rust

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  DISCORD_WEBHOOK: ${{ secrets.FO_DISCORD_WEB_DEVELOPMENT_WEBHOOK }}

jobs:
  build-and-test:
    name: Code formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install rust toolchain
        run: |
          rustup update --no-self-update stable
          rustup component add rustfmt rust-src clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo check
        run: cargo check --all-features --all-targets

      - name: Run cargo clippy
        run: cargo clippy --all-features --all-targets -- -D warnings

      - name: Run cargo test
        run: cargo test --all-features --all-targets -- --nocapture --quiet

      - name: Checkout sources
        uses: actions/checkout@v3

  send_notification:
    name: Send notification
    runs-on: ubuntu-latest
    needs: [build-and-test]
    steps:
      - name: Fail if any job fails
        if: ${{ failure() }}
        run: exit 1
      
      - name: Setup notification
        if: ${{ always() }}
        uses: kceb/pull-request-url-action@v1
        id: pr-url

      - name: Actions Status Discord
        if: ${{ always() }}
        uses: sarisia/actions-status-discord@v1.10.0
        with:
          url: ${{ steps.pr-url.outputs.url }}
